import{S as f,a as c,i as l}from"./assets/vendor-c493984e.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function e(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(t){if(t.ep)return;t.ep=!0;const r=e(t);fetch(t.href,r)}})();document.querySelector(".loader");let h=new f(".gallery a");const d=document.querySelector(".img-list");function p(o){const s=o.hits.map(e=>`<li class="list-el">
                <a href="${e.largeImageURL}"><img src='${e.webformatURL}' alt='${e.tags}'></a>
                <div class="content">
                    <div class="item"><h3>Likes</h3><p>${e.likes}</p></div>
                    <div class="item"><h3>Views</h3><p>${e.views}</p></div>
                    <div class="item"><h3>Comments</h3><p>${e.comments}</p></div>
                    <div class="item"><h3>Downloads</h3><p>${e.downloads}</p></div>
                </div>
            </li>`).join("");d.textContent="",d.insertAdjacentHTML("beforeend",s),a(),h.refresh()}async function y(o){c.defaults.baseURL="https://pixabay.com";const s={key:"44349742-ecc8a7b60aea5585f0c207813",q:o,image_type:"photo",orientation:"horizontal",safesearch:!0};try{return(await c.get("/api/",{params:s})).data}catch(e){console.log(e)}}const m=document.querySelector(".form-el"),g=document.querySelector(".img-list"),u=document.querySelector(".loader");function L(){u.classList.remove("visually-hidden")}function a(){u.classList.add("visually-hidden")}m.addEventListener("submit",async o=>{o.preventDefault();const s=m.elements[0].value.trim();if(L(),s){const e=await y(s);try{if(e.hits.length===0)throw a(),g.innerHTML="",new Error("Error! Nothing to load");p(e)}catch{l.show({title:"Sorry",message:"there are no images matching your search query. Please try again!",color:"red"})}}else{a(),l.error({message:"Info Search input must be filled!"});return}});
//# sourceMappingURL=commonHelpers.js.map
